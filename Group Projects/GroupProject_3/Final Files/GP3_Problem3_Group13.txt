
Substitution cancelled
old:DECLARE
cnumber number;

BEGIN
cnumber := &cnumber;
    IF cnumber=3 THEN
        UPDATE CUSTOMER SET NUMBER_OF_ORDERS=NUMBER_OF_ORDERS+5 WHERE CID IN (SELECT CID FROM PURCHASED GROUP BY CID HAVING count(CID)=cnumber);
    ELSIF cnumber=2 THEN
        UPDATE CUSTOMER SET NUMBER_OF_ORDERS=NUMBER_OF_ORDERS+3 WHERE CID IN (SELECT CID FROM PURCHASED GROUP BY CID HAVING count(CID)=cnumber);
    ELSE
        UPDATE CUSTOMER SET NUMBER_OF_ORDERS=NUMBER_OF_ORDERS+1 WHERE CID IN (SELECT CID FROM PURCHASED GROUP BY CID HAVING count(CID)=cnumber);
    END IF;
END;

new:DECLARE
cnumber number;

BEGIN
cnumber := 1;
    IF cnumber=3 THEN
        UPDATE CUSTOMER SET NUMBER_OF_ORDERS=NUMBER_OF_ORDERS+5 WHERE CID IN (SELECT CID FROM PURCHASED GROUP BY CID HAVING count(CID)=cnumber);
    ELSIF cnumber=2 THEN
        UPDATE CUSTOMER SET NUMBER_OF_ORDERS=NUMBER_OF_ORDERS+3 WHERE CID IN (SELECT CID FROM PURCHASED GROUP BY CID HAVING count(CID)=cnumber);
    ELSE
        UPDATE CUSTOMER SET NUMBER_OF_ORDERS=NUMBER_OF_ORDERS+1 WHERE CID IN (SELECT CID FROM PURCHASED GROUP BY CID HAVING count(CID)=cnumber);
    END IF;
END;

PL/SQL procedure successfully completed.

old:DECLARE
cnumber number;

BEGIN
cnumber := &cnumber;
    IF cnumber=3 THEN
        UPDATE CUSTOMER SET NUMBER_OF_ORDERS=NUMBER_OF_ORDERS+5 WHERE CID IN (SELECT CID FROM PURCHASED GROUP BY CID HAVING count(CID)=cnumber);
    ELSIF cnumber=2 THEN
        UPDATE CUSTOMER SET NUMBER_OF_ORDERS=NUMBER_OF_ORDERS+3 WHERE CID IN (SELECT CID FROM PURCHASED GROUP BY CID HAVING count(CID)=cnumber);
    ELSE
        UPDATE CUSTOMER SET NUMBER_OF_ORDERS=NUMBER_OF_ORDERS+1 WHERE CID IN (SELECT CID FROM PURCHASED GROUP BY CID HAVING count(CID)=cnumber);
    END IF;
END;

new:DECLARE
cnumber number;

BEGIN
cnumber := 2;
    IF cnumber=3 THEN
        UPDATE CUSTOMER SET NUMBER_OF_ORDERS=NUMBER_OF_ORDERS+5 WHERE CID IN (SELECT CID FROM PURCHASED GROUP BY CID HAVING count(CID)=cnumber);
    ELSIF cnumber=2 THEN
        UPDATE CUSTOMER SET NUMBER_OF_ORDERS=NUMBER_OF_ORDERS+3 WHERE CID IN (SELECT CID FROM PURCHASED GROUP BY CID HAVING count(CID)=cnumber);
    ELSE
        UPDATE CUSTOMER SET NUMBER_OF_ORDERS=NUMBER_OF_ORDERS+1 WHERE CID IN (SELECT CID FROM PURCHASED GROUP BY CID HAVING count(CID)=cnumber);
    END IF;
END;

PL/SQL procedure successfully completed.

old:DECLARE
cnumber number;

BEGIN
cnumber := &cnumber;
    IF cnumber=3 THEN
        UPDATE CUSTOMER SET NUMBER_OF_ORDERS=NUMBER_OF_ORDERS+5 WHERE CID IN (SELECT CID FROM PURCHASED GROUP BY CID HAVING count(CID)=cnumber);
    ELSIF cnumber=2 THEN
        UPDATE CUSTOMER SET NUMBER_OF_ORDERS=NUMBER_OF_ORDERS+3 WHERE CID IN (SELECT CID FROM PURCHASED GROUP BY CID HAVING count(CID)=cnumber);
    ELSE
        UPDATE CUSTOMER SET NUMBER_OF_ORDERS=NUMBER_OF_ORDERS+1 WHERE CID IN (SELECT CID FROM PURCHASED GROUP BY CID HAVING count(CID)=cnumber);
    END IF;
END;

new:DECLARE
cnumber number;

BEGIN
cnumber := 3;
    IF cnumber=3 THEN
        UPDATE CUSTOMER SET NUMBER_OF_ORDERS=NUMBER_OF_ORDERS+5 WHERE CID IN (SELECT CID FROM PURCHASED GROUP BY CID HAVING count(CID)=cnumber);
    ELSIF cnumber=2 THEN
        UPDATE CUSTOMER SET NUMBER_OF_ORDERS=NUMBER_OF_ORDERS+3 WHERE CID IN (SELECT CID FROM PURCHASED GROUP BY CID HAVING count(CID)=cnumber);
    ELSE
        UPDATE CUSTOMER SET NUMBER_OF_ORDERS=NUMBER_OF_ORDERS+1 WHERE CID IN (SELECT CID FROM PURCHASED GROUP BY CID HAVING count(CID)=cnumber);
    END IF;
END;

PL/SQL procedure successfully completed.

